{"version":3,"sources":["components/ToDoListItemContent.js","components/ToDoListItemOptions.js","components/ToDoListItem.js","services/ApiService.js","services/ApiConstants.js","services/ToDoListSevice.js","components/ToDoList.js","components/App.js","reportWebVitals.js","index.js"],"names":["ToDoListItemContent","props","id","title","setTitle","mode","setMode","addItem","editItem","submit","add","edit","editable","Form","Control","type","placeholder","value","onChange","event","target","onKeyUp","key","Set","has","ToDoListItemOptions","deleteItem","buttons","view","text","variant","action","map","button","Button","className","onClick","ToDoListItem","initialTitle","initialMode","superAddItem","superEditItem","useState","api","create","baseURL","timeout","interceptors","response","use","error","Promise","reject","errorHandler","TIMEOUT","toDoListServiceEndpoint","ToDoListSevice","getToDoListItems","a","get","headers","contentType","status","data","addToDoListItem","toDoListItem","post","editToDoListItem","toDoListItemEndPoint","put","deleteToDoListItem","delete","ToDoList","items","setItems","useEffect","then","counter","setCounter","addingItem","setAddingItem","itemMethods","newItem","newItems","newTitle","filter","item","Card","Body","Title","undefined","block","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64f1e6a0.chunk.js","sourcesContent":["import {Form} from 'react-bootstrap';\n\nconst ToDoListItemContent = props => {\n    const { id, title, setTitle, mode, setMode, addItem, editItem } = props;\n    \n    const submit = {\n        add: () => addItem(title),\n        edit: () => editItem(id, title)\n    }\n    \n    const submitWithEnterKey = event => {\n        if(event.key && event.key === 'Enter'){\n            submit[mode]();\n            setMode('view');\n        }\n    }\n    \n    const editable = (\n        <Form.Control \n            type=\"text\" \n            placeholder=\"Enter task title\" \n            value={title}\n            onChange={event => setTitle(event.target.value)} \n            onKeyUp={submitWithEnterKey}\n        />);\n    \n    const editableModes = new Set([\"add\", \"edit\"]);\n    \n    return editableModes.has(mode) ? (\n        editable\n    ) : (\n        title\n    );\n}\n\nexport default ToDoListItemContent;","import {Button} from \"react-bootstrap\";\n\nconst ToDoListItemOptions = props => {\n    const { id, title, mode, setMode, addItem, editItem, deleteItem } = props;\n    \n    const viewModeButtons = [\n        {\n            id: 0, \n            text: \"Edit\", \n            variant:\"warning\", \n            action: () => setMode(\"edit\")\n        },\n        {\n            id: 1,\n            text: \"Delete\",\n            variant: \"danger\",\n            action: () => deleteItem(id)\n        }\n    ];\n    \n    const addModeButtons  = [\n        {\n            id: 2,\n            text: \"Add\",\n            variant: \"success\",\n            action: () => addItem(title)\n        }  \n    ];\n\n    const editModeButtons = [\n        {\n            id: 3,\n            text: \"Save Changes\",\n            variant: \"info\",\n            action: () => editItem(id,title)\n        }\n    ];\n    \n    const buttons = {\n        view: viewModeButtons,\n        add: addModeButtons,\n        edit: editModeButtons\n    }\n    \n    return (\n        <>\n            {\n                buttons[mode].map(button => (\n                    <Button\n                        className=\"ml-2\"\n                        variant={button.variant}\n                        onClick={button.action}\n                        key={button.id}\n                    >\n                        {button.text}\n                    </Button>\n                ))\n            }\n        </>\n    );\n}\n\nexport default ToDoListItemOptions;","import ToDoListItemContent from \"./ToDoListItemContent\";\nimport ToDoListItemOptions from \"./ToDoListItemOptions\";\nimport React, {useState} from \"react\";\n\nconst ToDoListItem = (props) => {\n    const { id, title: initialTitle, mode: initialMode, addItem: superAddItem, editItem: superEditItem, deleteItem, className } = props;\n    \n    const [ title, setTitle] = useState(initialTitle);\n    const [ mode, setMode ] = useState(initialMode);\n    \n    const addItem = title => {\n        superAddItem(title);\n        setMode('view');\n    }\n    \n    const editItem = (id, title) => {\n        superEditItem(id, title);\n        setMode('view');\n    }\n    \n    return (\n        <div className={ \"d-flex align-items-center \" + className }>\n            <div className=\"flex-grow-1\">\n                <ToDoListItemContent \n                    id={id}\n                    title={title}\n                    setTitle={setTitle}\n                    mode={mode}\n                    setMode={setMode}\n                    addItem={addItem}\n                    editItem={editItem}\n                />\n            </div>\n            <div>\n                <ToDoListItemOptions \n                    id={id}\n                    title={title}\n                    mode={mode}\n                    setMode={setMode}\n                    addItem={addItem}\n                    editItem={editItem}\n                    deleteItem={deleteItem}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default ToDoListItem;","import {create} from 'axios';\n\nconst api = create({\n    baseURL: `https://prauselatodolist.azurewebsites.net/api/`,\n    timeout: 10000\n});\n\nconst errorHandler = (error) => {\n    return Promise.reject({ ...error })\n}\n\nconst successHandler = (response) => response;\n\napi.interceptors.response.use(response => successHandler(response),\n    error => errorHandler(error));\n\nexport default api;","const OK        = 200;\nconst TIMEOUT   = 408;\n\nexport {\n    OK,\n    TIMEOUT\n};","import api from './ApiService';\nimport { TIMEOUT } from \"./ApiConstants\";\n\nconst toDoListServiceEndpoint = 'todolist';\n\nconst getToDoListItems = async () => {\n    try {\n        const response = await api.get(toDoListServiceEndpoint, {\n            headers: {\n                contentType: \"application/json\"\n            }\n        });\n        return {\n            status: response.status,\n            data: response.data\n        }\n    } catch (err){\n        if(err.response){\n            return {\n                status: err.response.status,\n            }\n        } else {\n            return {\n                status: TIMEOUT\n            }\n        }\n    }\n}\n\nconst addToDoListItem = async title => {\n    try {\n        const toDoListItem = {\n            title: title\n        }\n        const response = await api.post(toDoListServiceEndpoint, toDoListItem, {\n            headers: {\n                contentType: \"application/json\"\n            }\n        });\n        return {\n            status: response.status,\n            data: response.data\n        }\n    } catch (err){\n        if(err.response){\n            return {\n                status: err.response.status,\n            }\n        } else {\n            return {\n                status: TIMEOUT\n            }\n        }\n    }\n}\n\nconst editToDoListItem = async (id, title) => {\n    try {\n        const toDoListItem = {\n            title: title\n        }\n        const toDoListItemEndPoint = `${toDoListServiceEndpoint}/${id}`;\n        const response = await api.put(toDoListItemEndPoint, toDoListItem, {\n            headers: {\n                contentType: \"application/json\"\n            }\n        });\n        return {\n            status: response.status,\n            data: response.data\n        }\n    } catch (err){\n        if(err.response){\n            return {\n                status: err.response.status,\n            }\n        } else {\n            return {\n                status: TIMEOUT\n            }\n        }\n    }\n}\n\nconst deleteToDoListItem = async id => {\n    try {\n        const toDoListItemEndPoint = `${toDoListServiceEndpoint}/${id}`;\n        const response = await api.delete(toDoListItemEndPoint, {\n            headers: {\n                contentType: \"application/json\"\n            }\n        });\n        return {\n            status: response.status,\n            data: response.data\n        }\n    } catch (err){\n        if(err.response){\n            return {\n                status: err.response.status,\n            }\n        } else {\n            return {\n                status: TIMEOUT\n            }\n        }\n    }\n}\n\nconst ToDoListSevice = {\n    getToDoListItems,\n    addToDoListItem,\n    editToDoListItem,\n    deleteToDoListItem\n}\n\nexport default ToDoListSevice;","import {useEffect, useState} from \"react\";\nimport {Card, Button} from 'react-bootstrap';\nimport ToDoListItem from \"./ToDoListItem\";\nimport ToDoListSevice from \"../services/ToDoListSevice\";\nimport {OK} from '../services/ApiConstants';\n\nconst ToDoList = () => {\n    const [items, setItems] = useState([]);\n    \n    useEffect(() => {\n        ToDoListSevice.getToDoListItems().then(response => {\n            if(response.status === OK){\n                setItems(response.data);\n            }\n        }\n    )}, []);\n    \n    const [counter, setCounter] = useState(1);\n    const [addingItem, setAddingItem] = useState(false);\n    \n    const addItem       = title => {\n        const newItem  = {\n            id: counter, \n            title: title\n        }\n        setAddingItem(false);\n        const newItems = [\n            ...items,\n            newItem\n        ];\n        ToDoListSevice.addToDoListItem(title).then(() => {\n            setCounter(counter+1);\n            setItems(newItems);\n        })\n    }\n    \n    const editItem      = (id, newTitle) => {\n        const newItems = [...items];\n        let item       = newItems.filter(item => item.id === id);\n        item.title     = newTitle;\n        ToDoListSevice.editToDoListItem(id, newTitle).then(() => setItems(newItems));\n    }\n    \n    const deleteItem    = id => {\n        let newItems = [...items];\n        newItems     = newItems.filter(item => item.id !== id);\n        ToDoListSevice.deleteToDoListItem(id).then(() => setItems(newItems));        \n    }\n    \n    const itemMethods = {\n        addItem,\n        editItem,\n        deleteItem\n    }\n    \n    return (\n        <Card className=\"m-5\">\n            <Card.Body>\n                <Card.Title>To Do List</Card.Title>\n                <div className=\"my-2\">\n                    {\n                        items.map(item => (\n                                <ToDoListItem\n                                    className=\"mt-2\"\n                                    id={item.id}\n                                    title={item.title}\n                                    mode=\"view\"\n                                    key={item.id}\n                                    {...itemMethods}\n                                />\n                            )\n                        )\n                    }\n                    {\n                        addingItem ? (\n                            <ToDoListItem\n                                className=\"mt-2\"\n                                title=\"\"\n                                mode=\"add\"\n                                {...itemMethods}\n                            />\n                        ) : undefined\n                    }\n                </div>\n                {\n                    !addingItem ? (\n                        <Button\n                            variant=\"primary\"\n                            onClick={() => setAddingItem(true)}\n                            block\n                        >\n                            New Task\n                        </Button>\n                    ) : undefined\n                }\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default ToDoList;","import ToDoList from \"./ToDoList\";\n\nconst App = () => {\n    return (\n        <ToDoList />\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}